1,2c1
< #include <iostream>
< #include <vector>
---
> //#include<bits/stdc++.h>
4c3,7
< 
---
> #include <cmath>
> #include <cstdio>
> #include <vector>
> #include <iostream>
> #include <algorithm>
5a9,11
> typedef unsigned int u_int;
> typedef vector<char> inner_vec;
> typedef vector<inner_vec> outer_vec;
7,26c13,23
< vector < long long int> solve(int n, int k, vector < long long int > a){
<     vector <long long int> max(2);
<     max[1] = 1;
<     for(int i = 0; (i+k) <= n; i++){
<         long long int sum;
<         sum = a[i];
<         int m = i;
<         int j = 0;
<         for(int l = 1; l < k; l++){
<             if(0 == sum)break;
<             else if(l == (k-1)){
<                 sum &= a[i+l+j];
<                 if(max[0] < sum){
<                     max[0] = sum;
<                     max[1] = 1;
<                 }
<                 else if(max[0] && (max[0] == sum))max[1]++;
<                 if((j+k) < n){
<                     j++;
<                     l = 0;
---
> int solution (outer_vec A, int K) {
>     int busted = 0;
>     for(u_int i = 0; i < A[0].size(); i++){
>         for(u_int j = 0; j < A[0].size();j++){
>             if(A[i][j] == 'P'){
>                 for(u_int k = j+1; k < A[0].size() && (k-j) <= K;k++){
>                     if(A[i][k] == 'T'){
>                         busted++;
>                         A[i][k] = 'B';
>                         break;
>                     }
28,32c25,34
<                 else if((m+k) < n)
<                 {
<                     m++;
<                     j = m;
<                     l = 0;
---
> 
>                 continue;
>             }
>             else if(A[i][j] == 'T'){
>                 for(u_int l = j+1; l < A[0].size() && (l-j) <= K;l++){
>                     if(A[i][l] == 'P'){
>                         busted++;
>                         A[i][l] = 'B';
>                         break;
>                     }
34,35c36,37
<                 else break;
<                 sum = a[i];
---
> 
>                 continue;
37,38d38
<             else
<                 sum &= a[i+l+m];
41c41
<     return max;
---
>     return busted;
45,58d44
<     int n;
<     int k;
<     cin >> n >> k;
<     vector<long long int> a;
<     for(int n_i = 0; n_i < n; n_i++){
<         long long int temp;
<         cin >> temp;
<         if(temp)a.push_back(temp);
<     }
<     vector < long long int> result = solve(a.size(), k, a);
<     for (ssize_t i = 0; i < result.size(); i++) {
<         cout << result[i] << ((i != (result.size()-1)) ? "\n" : "");
<     }
<     cout << endl;
59a46,63
>     ios::sync_with_stdio(0);
>     cin.tie(0);
>     int T;
>     cin >> T;
>     for(int t_i=0; t_i<T; t_i++)
>     {
>         int N;
>         cin >> N;
>         int K;
>         cin >> K;
>         outer_vec A(N, inner_vec(N));
>         for (int i_A=0; i_A<N; i_A++)
>         {
>             for(int j_A=0; j_A<N; j_A++)
>             {
>                 cin >> A[i_A][j_A];
>             }
>         }
61c65,69
<     return 0;
---
>         int out_;
>         out_ = solution(A, K);
>         cout << out_;
>         cout << "\n";
>     }
